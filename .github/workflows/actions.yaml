name: todo-app-automation
on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.*"
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  test:
    permissions:
      contents: read
    runs-on: [self-hosted, linux, x64]

    steps:
      - name: install go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.4"
      - uses: actions/checkout@v4
      - name: lint with golangci-lint
        uses: golangci/golangci-lint-action@v2
      - name: run go mod download and go test
        run: |
          go mod download
          go test ./...

  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: htmx-todo-app
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
